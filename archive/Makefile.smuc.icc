TARGET = mpisolve
OBJ = intde2.o random.o paramreader.o grid.o outputroutines.o initialconditions.o specialfunctions.o potential.o externalv.o mpisolve.o latextv.o

OPTIMIZATION = -O2 #-funroll-loops -finline-functions
#DEBUG = -Wno-deprecated #-W -Wall -g
INCLUDES = -I include $(FFTW_INC) $(GSL_INC)
CXXFLAGS = $(INCLUDES) $(OPTIMIZATION)
MPIFLAGS = $(CXXFLAGS)
LDFLAGS = $(GSL_LIB) $(GSL_BLAS_LIB) $(FFTW_MPI_SHLIB)
CC = mpicc

all: $(TARGET)

mpisolve: $(OBJ)
	$(CC) $(OBJ) -ompisolve $(LDFLAGS)

run:
	mpirun -np 3 mpisolve

run1:
	mpirun -np 9 mpisolve

run2:
	mpirun -np 17 mpisolve

run4:
	mpirun -np 33 mpisolve

run8:
	mpirun -np 65 mpisolve

cleandata:
	./scripts/cleandatafiles.sh

clean: cleandata
	rm -f *\.o *~

mrproper: clean
	rm -f $(TARGET)

.c.o:
	$(CC) $(MPIFLAGS) -c $*.c

.cpp.o:
	$(CC) $(MPIFLAGS) -c $*.cpp

help:
	@echo 'Build targets:'
	@echo '  all          - Builds mpisolve standalone'
	@echo '  solve        - Builds mpisolve standalone'
	@echo 'Cleanup targets:'
	@echo '  clean        - Remove generated files + Emacs leftovers'
	@echo '  mrproper     - Removes generated targets + all aboves'
	@echo 'Exec targets:'
	@echo '  run          - Run mpisolve (with first cleaning up data)'
